{"files":[{"id":"e373be3f-7457-4245-9b95-e05714b80c14","name":"Hours-Count-v1","type":"server_js","source":"/*\n    HOURS COUNT v1\n\n    is the 1st version of the script to merge some RECAP data\n    in \u0027Suivi Compte d\u0027Heures file\n*/\n\n/*\nconst CONST \u003d {\n\n    // CONST.ID \u003d 9;\n    SRC_TYPE:       2,\n    SRC_MORN:       4,\n    SRC_NOON:       5,\n    SRC_EVEN:       6,\n    SRC_AFFECT_1:   3, // PERI 1 / ALSH_MERC / NOEL / CARN ...\n    SRC_AFFECT_2:   7, // PERI / ALSH PTE VAC / ALSH GDE VAC\n    SRC_AFFECT_3:   1, // School / ALSH_MOINS / ALSH_PLUS\n    SRC_FULLNAME:   0,\n\n    DST_FULLNAME:   0,\n    DST_VOID_1:     0,\n    DST_VOID_2:     0,\n    DST_M_START:    0,\n    DST_M_END:      0,\n    DST_IS_DIR:     0,\n    DST_SCHOOL:     0,\n    DST_H_MORN:     0,\n    DST_H_NOON:     0,\n    DST_H_EVEN:     0,\n    DST_ALSH_P1:    0,\n    DST_ALSH_P2:    0,\n    DST_ALSH_P1:    0,\n    DST_ALSH_TOUS:  0,\n    DST_ALSH_NOEL:  0,\n    DST_ALSH_CARN:  0,\n    DST_ALSH_PAQU:  0,\n    DST_ALSH_JUIL:  0,\n    DST_ALSH_AOUT:  0,\n};\n\n\nconst SETTINGS \u003d {\n    SRC_ID: \u00271-JVQ-3kYWhVkwG5MYjkVGjy0X4qWCk0BfZj5gKAzgwU\u0027,\n    SRC_NAME_RANGE: \u0027RECAP!A2:H\u0027,\n    SRC_HAS_HEADER: true,\n\n    DST_ID: \u00271jWrIa-tgpItt-px2E2M7qnDs0DDYDJXeD_wPePAHB-Q\u0027,\n    DST_NAME_RANGE: \u0027Copie de AFFECTION_SJO!A18:S\u0027,\n};\n*/\n\n\nvar Employees \u003d function() {\n    this._data \u003d [];\n\n    this.exist \u003d function(fullname) {\n        for (var i \u003d 0; i \u003c this._data.length; ++i) {\n            if (this._data[i][\u0027fullname\u0027] \u003d\u003d fullname)\n                return i;\n        }\n        return -1;\n    }\n\n    this.add \u003d function(fullname) {\n        var employee \u003d {\n            \u0027fullname\u0027:     fullname,\n            \u0027blank_1\u0027:      \u0027\u0027, // \u0027\u003dARRAYFORMULA(SI($A17:$A\u003d\"\";;AN17:AN/$Y17:$Y))\u0027,\n            \u0027blank_2\u0027:      \u0027\u0027, // \u0027\u003dARRAYFORMULA(SI($A17:$A\u003d\"\";;AO17:AO/$Y17:$Y))\u0027,\n            \u0027month_start\u0027:  \u0027SEPT. 2019\u0027,\n            \u0027month_end\u0027:    \u0027JUIN 2020\u0027,\n            \u0027is_dir\u0027:       false,\n            \u0027school\u0027:       \u0027\u0027,\n            \u0027h_morn\u0027:       \u0027\u0027,\n            \u0027h_noon\u0027:       \u0027\u0027,\n            \u0027h_even\u0027:       \u0027\u0027,\n            \u0027alsh_p1\u0027:      \u0027\u0027,\n            \u0027alsh_p2\u0027:      \u0027\u0027,\n            \u0027alsh_p3\u0027:      \u0027\u0027,\n            \u0027alsh_tous\u0027:    \u0027\u0027,\n            \u0027alsh_noel\u0027:    \u0027\u0027,\n            \u0027alsh_carn\u0027:    \u0027\u0027,\n            \u0027alsh_paqu\u0027:    \u0027\u0027,\n            \u0027alsh_juil\u0027:    \u0027\u0027,\n            \u0027alsh_aout\u0027:    \u0027\u0027,\n        };\n        this._data.push(employee);\n        return employee;\n    }\n\n    this.save \u003d function(employee) {\n        for (var i \u003d 0; i \u003c this._data.length; ++i) {\n            if (this._data[i][\u0027fullname\u0027] \u003d\u003d employee[\u0027fullname\u0027]) {\n                this._data[i] \u003d employee;\n                return true;\n            }\n        }\n        return false;\n    }\n\n    this.update \u003d function(row) {\n        const ID \u003d 9;\n        const TYPE \u003d 2;\n        const MORN \u003d 4;\n        const NOON \u003d 5;\n        const EVEN \u003d 6;\n        const AFFECT_1 \u003d 3; // PERI 1 / ALSH_MERC / NOEL / CARN ...\n        const AFFECT_2 \u003d 7; // PERI / ALSH PTE VAC / ALSH GDE VAC\n        const AFFECT_3 \u003d 1; // School / ALSH_MOINS / ALSH_PLUS\n        const FULLNAME \u003d 0;\n\n        var employee \u003d undefined;\n        var iemployee \u003d undefined;\n\n        if ((iemployee \u003d this.exist(row[FULLNAME])) \u003d\u003d -1)  {\n            employee \u003d this.add(row[FULLNAME]);\n        }\n        else {\n            employee \u003d this._data[iemployee];\n        }\n        // Logger.log(\u0027iemployee: %s\u0027, iemployee);\n\n        if (employee \u003d\u003d undefined) {\n            Logger.log(\u0027Failed to add/get employee\u0027);\n        }\n\n\n        // DIR\n        if (row[TYPE] \u003d\u003d \u0027DAP\u0027)\n            employee[\u0027is_dir\u0027] \u003d true;\n\n\n        // SCHOOL\n        const schools \u003d {\n            \u0027BDP\u0027   : \u0027BOIS DU PARC\u0027,\n            \u0027JMER\u0027  : \u0027Jeanne MERTON\u0027,\n            \u0027EM\u0027    : \u0027EDOUARD MARCEAU\u0027,\n            \u0027HM\u0027    : \u0027HENRI MAURICE\u0027,\n            \u0027PRES\u0027  : \u0027PRESQU\\\u0027ÃŽLE\u0027,\n            \u0027MDO\u0027   : \u0027MORNE DES OLIVES\u0027,\n            \u0027GOND\u0027  : \u0027Ambroise PALIX - GONDEAU\u0027,\n            \u0027DUR\u0027   : \u0027Luc CAYOL - DURAND\u0027,\n            \u0027CHAP\u0027  : \u0027Lise DESIR CARTESSE - CHAPELLE\u0027,\n\n            \u0027ALSH_MOINS\u0027:   \u0027ALSH_MOINS\u0027,\n            \u0027ALSH_PLUS\u0027:    \u0027ALSH_PLUS\u0027,\n        }\n        // employee[\u0027school\u0027] \u003d schools[row[AFFECT_3]]; // AFFECT_3 \u003d SCHOOL\n\n\n        // AFFECTATION DECISIONS\n        if (row[AFFECT_1] \u003d\u003d \u0027PERI 1\u0027) {\n\n            // SCHOOL\n            employee[\u0027school\u0027] \u003d schools[row[AFFECT_3]]; // AFFECT_3 \u003d SCHOOL\n\n            // HOURS MORN/NOON/EVEN\n            employee[\u0027h_morn\u0027] \u003d row[MORN];\n            employee[\u0027h_noon\u0027] \u003d row[NOON];\n            employee[\u0027h_even\u0027] \u003d row[EVEN];\n        }\n        else {\n            // ALSH_MOINS/ALSH_PLUS\n            if (employee[\u0027school\u0027] \u003d\u003d \u0027\u0027)\n                employee[\u0027school\u0027] \u003d schools[row[AFFECT_3]]; // AFFECT_3 \u003d SCHOOL\n\n\n            // LAST TIME CONDITION\n            // VACATIONS ARE NOT READY YET\n            // ONLY FILTER ALSH MERC\n            if (row[AFFECT_1] \u003d\u003d \u0027MERC P1\u0027) {\n\n                const WHERE \u003d {\n                    \u0027MERC P1\u0027:    \u0027alsh_p1\u0027,\n                    \u0027NOEL\u0027:         \u0027alsh_noel\u0027,\n                    \u0027CARN\u0027:         \u0027alsh_carn\u0027,\n                    \u0027PAQUES\u0027:       \u0027alsh_paqu\u0027,\n                    \u0027JUILLET\u0027:      \u0027alsh_juil\u0027,\n                    \u0027AOUT\u0027:         \u0027alsh_aout\u0027,\n                }\n\n                const AFFECT \u003d {\n                    \u0027ALSH_MOINS\u0027: \u0027MAT\u0027,\n                    \u0027ALSH_PLUS\u0027: \u0027ELE\u0027,\n                }\n\n                const AFFECT_DIR \u003d {\n                    \u0027ALSH_MOINS\u0027: \u0027MAT_DIR\u0027,\n                    \u0027ALSH_PLUS\u0027: \u0027ELE_DIR\u0027,\n                }\n\n                const where \u003d WHERE[row[AFFECT_1]];\n\n                // Hours for ALSH\n                var value \u003d \u0027\u0027;\n                if (row[NOON] \u003d\u003d \u00278\u0027) {\n                    value \u003d \u0027C_\u0027;\n                }\n                else {\n                    value \u003d \u0027G_\u0027;\n                }\n\n                value +\u003d (employee[\u0027is_dir\u0027]) ? AFFECT_DIR[row[AFFECT_3]] : AFFECT[row[AFFECT_3]];\n\n                employee[where] \u003d value;\n\n                // if (where \u003d\u003d \u0027alsh_p1\u0027) {\n                //     // Logger.log(\u0027fname: %s with where \u003d\u003d %s \u0026\u0026 value \u003d\u003d %s\u0027, employee[\u0027fullname\u0027], where, value);\n                //     Logger.log(\u0027employee[%s] \u003d %s\u0027, where, value);\n                // }\n            }\n        }\n\n        // Save employee when we are done\n        this.save(employee);\n        // Logger.log(\u0027%s\u0027, this.save(employee));\n    }\n\n    this.print \u003d function() {\n        for (var i \u003d 0; i \u003c this._data.length; ++i) {\n            var employee \u003d this._data[i];\n            Logger.log(\u0027 - %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s\u0027,\n                employee[\u0027fullname\u0027],\n                employee[\u0027month_start\u0027],\n                employee[\u0027month_end\u0027],\n                employee[\u0027is_dir\u0027],\n                employee[\u0027school\u0027],\n                employee[\u0027h_morn\u0027],\n                employee[\u0027h_noon\u0027],\n                employee[\u0027h_even\u0027],\n                employee[\u0027alsh_p1\u0027],\n                employee[\u0027alsh_p2\u0027],\n                employee[\u0027alsh_p3\u0027],\n                employee[\u0027alsh_tous\u0027],\n                employee[\u0027alsh_noel\u0027],\n                employee[\u0027alsh_carn\u0027],\n                employee[\u0027alsh_paqu\u0027],\n                employee[\u0027alsh_juil\u0027],\n                employee[\u0027alsh_aout\u0027]\n            );\n        }\n        // Logger.log(this._data);\n    }\n}\n\n\nfunction myFunction() {\n    // INIT\n    var src_id \u003d \u00271-JVQ-3kYWhVkwG5MYjkVGjy0X4qWCk0BfZj5gKAzgwU\u0027;\n    var src_name_range \u003d \u0027RECAP!A2:H\u0027;\n    \n    var dst_id \u003d \u00271jWrIa-tgpItt-px2E2M7qnDs0DDYDJXeD_wPePAHB-Q\u0027;\n    var dst_name_range \u003d \u0027AFFECTION_SJO!A18:S\u0027;\n    \n    var src_values \u003d Sheets.Spreadsheets.Values.get(src_id, src_name_range).values;\n    if (!src_values) {\n        Logger.log(\u0027No data found for SRC.\u0027);\n        return;\n    }\n\n\n    // CORE\n    // Data collect from RECAP\n    var employees \u003d new Employees();\n    \n    for (var i \u003d 1; i \u003c src_values.length; ++i) {        \n        employees.update(src_values[i]);\n    }\n    employees.print();\n\n\n    // SAVE\n    // Save data to DST\n    var dst_value_range \u003d Sheets.newValueRange();\n        dst_value_range.values \u003d [];\n\n\n    Logger.log(\u0027%s\u0027, employees._data.length);\n    for (var i \u003d 0; i \u003c employees._data.length; ++i) {\n        // const e \u003d employees._data[i];\n        // Logger.log(\u0027%s\u0027, employees._data[i][\u0027fullname\u0027]);\n\n        var v \u003d [\n           employees._data[i][\u0027fullname\u0027],\n           employees._data[i][\u0027blank_1\u0027],\n           employees._data[i][\u0027blank_2\u0027],\n           employees._data[i][\u0027month_start\u0027],\n           employees._data[i][\u0027month_end\u0027],\n           employees._data[i][\u0027is_dir\u0027],\n           employees._data[i][\u0027school\u0027],\n           employees._data[i][\u0027h_morn\u0027],\n           employees._data[i][\u0027h_noon\u0027],\n           employees._data[i][\u0027h_even\u0027],\n           employees._data[i][\u0027alsh_p1\u0027],\n           employees._data[i][\u0027alsh_p2\u0027],\n           employees._data[i][\u0027alsh_p3\u0027],\n           employees._data[i][\u0027alsh_tous\u0027],\n           employees._data[i][\u0027alsh_noel\u0027],\n           employees._data[i][\u0027alsh_carn\u0027],\n           employees._data[i][\u0027alsh_paqu\u0027],\n           employees._data[i][\u0027alsh_juil\u0027],\n           employees._data[i][\u0027alsh_aout\u0027],\n        ];\n        Logger.log(\u0027%s\u0027, v[0]);\n\n        dst_value_range.values.push(\n            v\n        );\n    }\n\n    var result \u003d Sheets.Spreadsheets.Values.update(dst_value_range, dst_id, dst_name_range, {\n        valueInputOption: \u0027USER_ENTERED\u0027\n    });\n}"},{"id":"76912357-84d7-4540-84aa-8a4b2ec4761c","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"America/Caracas\",\n  \"dependencies\": {\n    \"enabledAdvancedServices\": [{\n      \"userSymbol\": \"Sheets\",\n      \"serviceId\": \"sheets\",\n      \"version\": \"v4\"\n    }]\n  },\n  \"exceptionLogging\": \"STACKDRIVER\"\n}"},{"id":"ec0f670b-ea04-4325-bb29-ebcd11259a7e","name":"Hours-Count-v2","type":"server_js","source":"/*\n    HOURS COUNT v2\n\n    It\u0027s se 2nd version of the 1st script\n    It\u0027s supposed to be faster in comparison of the v1\n\n    Data are extracted from (REPARTITION_PERSONNEL_STJO_SERVICE_ACM_2019-2020) in the RECAP tab\n    Then we organize them with Employee class\n    And we save it in file (Suivi Compte D\u0027heures 2019-2020)\n\n    Entry point: main \n\n    Source file:\n        REPARTITION_PERSONNEL_STJO_SERVICE_ACM_2019-2020\n        https://docs.google.com/spreadsheets/d/1-JVQ-3kYWhVkwG5MYjkVGjy0X4qWCk0BfZj5gKAzgwU\n\n    Destination file:\n        Suivi Compte D\u0027heures 2019-2020\n        https://docs.google.com/spreadsheets/d/1hOc7GccePGflrWUQBTZlYz2ATbHhGz7TzSzKvtShIAk\n*/\n\nvar CONST \u003d {\n\n    // CONST.ID \u003d 9;\n    SRC_TYPE:       2,\n    SRC_MORN:       4,\n    SRC_NOON:       5,\n    SRC_EVEN:       6,\n    SRC_AFFECT_1:   3, // PERI 1 / ALSH_MERC / NOEL / CARN ...\n    SRC_AFFECT_2:   7, // PERI / ALSH PTE VAC / ALSH GDE VAC\n    SRC_AFFECT_3:   1, // School / ALSH_MOINS / ALSH_PLUS\n    SRC_FULLNAME:   0,\n\n\n    // DST REFERENCES\n    DST_FULLNAME:   0,\n    DST_IS_DIR:     5,\n    DST_SCHOOL:     6,\n\n    DST_VOID_1:     1,\n    DST_VOID_2:     2,\n\n    DST_M_START:    3,\n    DST_M_END:      4,\n\n    DST_H_MORN:     7,\n    DST_H_NOON:     8,\n    DST_H_EVEN:     9,\n\n    DST_ALSH_P1:    10,\n    DST_ALSH_P2:    11,\n    DST_ALSH_P3:    12,\n\n    DST_ALSH_TOUS:  13,\n    DST_ALSH_NOEL:  14,\n    DST_ALSH_CARN:  15,\n    DST_ALSH_PAQU:  16,\n    DST_ALSH_JUIL:  17,\n    DST_ALSH_AOUT:  18,\n};\n\n\nvar SETTINGS \u003d {\n    SRC_ID: \u00271-JVQ-3kYWhVkwG5MYjkVGjy0X4qWCk0BfZj5gKAzgwU\u0027,\n    SRC_NAME_RANGE: \u0027RECAP!A2:H\u0027,\n    SRC_HAS_HEADER: true,\n\n    //  DST_ID: \u00271jWrIa-tgpItt-px2E2M7qnDs0DDYDJXeD_wPePAHB-Q\u0027,\n    // DST_NAME_RANGE: \u0027Copie de AFFECTION_SJO!A18:S\u0027,\n    DST_ID: \u00271hOc7GccePGflrWUQBTZlYz2ATbHhGz7TzSzKvtShIAk\u0027,\n    DST_NAME_RANGE: \u0027AFFECTION_SJO!A18:S\u0027,\n};\n\n\nvar Employees \u003d function() {\n    this._data \u003d [];\n\n    this.exist \u003d function(fullname) {\n        for (var i \u003d 0; i \u003c this._data.length; ++i) {\n            if (this._data[i][CONST.DST_FULLNAME] \u003d\u003d fullname)\n                return i;\n        }\n        return -1;\n    }\n\n    this.add \u003d function(fullname) {\n        var employee \u003d [\n            /* fullname     */     fullname,\n            /* blank_1      */      \u0027\u0027,             // \u0027\u003dARRAYFORMULA(SI($A17:$A\u003d\"\";;AN17:AN/$Y17:$Y))\u0027,\n            /* blank_2      */      \u0027\u0027,             // \u0027\u003dARRAYFORMULA(SI($A17:$A\u003d\"\";;AO17:AO/$Y17:$Y))\u0027,\n            /* month_start  */      \u0027SEPT. 2019\u0027,\n            /* month_end    */      \u0027JUIN 2020\u0027,\n            /* is_dir       */      false,\n            /* school       */      \u0027\u0027,\n            /* h_morn       */      \u0027\u0027,\n            /* h_noon       */      \u0027\u0027,\n            /* h_even       */      \u0027\u0027,\n            /* alsh_p1      */      \u0027\u0027,\n            /* alsh_p2      */      \u0027\u0027,\n            /* alsh_p3      */      \u0027\u0027,\n            /* alsh_tous    */      \u0027\u0027,\n            /* alsh_noel    */      \u0027\u0027,\n            /* alsh_carn    */      \u0027\u0027,\n            /* alsh_paqu    */      \u0027\u0027,\n            /* alsh_juil    */      \u0027\u0027,\n            /* alsh_aout    */      \u0027\u0027,   \n        ];\n        this._data.push(employee);\n        return employee;\n    }\n\n    this.save \u003d function(employee) {\n        for (var i \u003d 0; i \u003c this._data.length; ++i) {\n            if (this._data[i][ CONST.DST_FULLNAME ] \u003d\u003d employee[ CONST.DST_FULLNAME ]) {\n                this._data[i] \u003d employee;\n                return true;\n            }\n        }\n        return false;\n    }\n\n    this.update \u003d function(row) {\n        var employee \u003d undefined;\n        var iemployee \u003d undefined;\n\n        // Find employee\n            // If not find \n            // Create a new one\n        if ((iemployee \u003d this.exist(row[ CONST.SRC_FULLNAME ])) \u003d\u003d -1)  {\n            employee \u003d this.add(row[ CONST.SRC_FULLNAME ]);\n        }\n        else {\n            employee \u003d this._data[iemployee];\n        }\n        // Logger.log(\u0027iemployee: %s\u0027, iemployee);\n\n\n        // Check if no errors\n        if (employee \u003d\u003d undefined) {\n            Logger.log(\u0027Failed to add/get employee with fullname: %s\u0027, row[ CONST.SRC_FULLNAME ]);\n        }\n\n\n        // Organise data according to DST format\n\n        // DIR\n        if (row[ CONST.SRC_TYPE ] \u003d\u003d \u0027DAP\u0027)\n            employee[ CONST.DST_IS_DIR] \u003d true;\n\n\n        // SCHOOL\n        const schools \u003d {\n            \u0027BDP\u0027   : \u0027BOIS DU PARC\u0027,\n            \u0027JMER\u0027  : \u0027Jeanne MERTON\u0027,\n            \u0027EM\u0027    : \u0027EDOUARD MARCEAU\u0027,\n            \u0027HM\u0027    : \u0027HENRI MAURICE\u0027,\n            \u0027PRES\u0027  : \u0027PRESQU\\\u0027ÃŽLE\u0027,\n            \u0027MDO\u0027   : \u0027MORNE DES OLIVES\u0027,\n            \u0027GOND\u0027  : \u0027Ambroise PALIX - GONDEAU\u0027,\n            \u0027DUR\u0027   : \u0027Luc CAYOL - DURAND\u0027,\n            \u0027CHAP\u0027  : \u0027Lise DESIR CARTESSE - CHAPELLE\u0027,\n\n            \u0027ALSH_MOINS\u0027:   \u0027ALSH_MOINS\u0027,\n            \u0027ALSH_PLUS\u0027:    \u0027ALSH_PLUS\u0027,\n        }\n        // employee[ CONST.DST_SCHOOL ] \u003d schools[row[ CONST.SRC_AFFECT_3]]; // AFFECT_3 \u003d SCHOOL\n\n\n        // AFFECTATION DECISIONS\n        // PERI\n        if (row[ CONST.SRC_AFFECT_1] \u003d\u003d \u0027PERI 1\u0027) {\n\n            // SCHOOL\n            employee[ CONST.DST_SCHOOL ] \u003d row[ CONST.SRC_AFFECT_3]; // AFFECT_3 \u003d SCHOOL\n            // employee[ CONST.DST_SCHOOL ] \u003d schools[row[ CONST.SRC_AFFECT_3]]; // AFFECT_3 \u003d SCHOOL\n\n            // HOURS MORN/NOON/EVEN\n            employee[ CONST.DST_H_MORN ] \u003d row[ CONST.SRC_MORN ];\n            employee[ CONST.DST_H_NOON ] \u003d row[ CONST.SRC_NOON ];\n            employee[ CONST.DST_H_EVEN ] \u003d row[ CONST.SRC_EVEN ];\n        }\n\n        // ALSH\n        else {\n            // ALSH_MOINS/ALSH_PLUS\n            if (employee[ CONST.DST_SCHOOL ] \u003d\u003d \u0027\u0027) {\n                employee[ CONST.DST_SCHOOL ] \u003d row[ CONST.SRC_AFFECT_3]; // AFFECT_3 \u003d SCHOOL\n                // employee[ CONST.DST_SCHOOL ] \u003d schools[row[ CONST.SRC_AFFECT_3]]; // AFFECT_3 \u003d SCHOOL\n            }\n\n\n            // LAST TIME CONDITION\n            // VACATIONS ARE NOT READY YET\n            // ONLY FILTER ALSH MERC\n            if (row[ CONST.SRC_AFFECT_1] \u003d\u003d \u0027MERC P1\u0027) {\n\n                const WHERE \u003d {\n                    \u0027MERC P1\u0027:      CONST.DST_ALSH_P1,\n                    \u0027NOEL\u0027:         CONST.DST_ALSH_NOEL,\n                    \u0027CARN\u0027:         CONST.DST_ALSH_CARN,\n                    \u0027PAQUES\u0027:       CONST.DST_ALSH_PAQU,\n                    \u0027JUILLET\u0027:      CONST.DST_ALSH_JUIL,\n                    \u0027AOUT\u0027:         CONST.DST_ALSH_AOUT,\n                }\n\n                const AFFECT \u003d {\n                    \u0027ALSH_MOINS\u0027: \u0027MAT\u0027,\n                    \u0027ALSH_PLUS\u0027: \u0027ELE\u0027,\n                }\n\n                const AFFECT_DIR \u003d {\n                    \u0027ALSH_MOINS\u0027: \u0027MAT_DIR\u0027,\n                    \u0027ALSH_PLUS\u0027: \u0027ELE_DIR\u0027,\n                }\n\n                const where \u003d WHERE[row[ CONST.SRC_AFFECT_1]];\n\n                // Hours for ALSH\n                var value \u003d \u0027\u0027;\n                if (row[ CONST.SRC_NOON ] \u003d\u003d \u00278\u0027) {\n                    value \u003d \u0027C_\u0027;\n                }\n                else {\n                    value \u003d \u0027G_\u0027;\n                }\n\n                value +\u003d (employee[ CONST.DST_IS_DIR]) ? AFFECT_DIR[row[ CONST.SRC_AFFECT_3]] : AFFECT[row[ CONST.SRC_AFFECT_3]];\n\n                employee[where] \u003d value;\n\n                // if (where \u003d\u003d \u0027alsh_p1\u0027) {\n                //     // Logger.log(\u0027fname: %s with where \u003d\u003d %s \u0026\u0026 value \u003d\u003d %s\u0027, employee[\u0027fullname\u0027], where, value);\n                //     Logger.log(\u0027employee[%s] \u003d %s\u0027, where, value);\n                // }\n            }\n        }\n\n        // Save employee when we are done\n        this.save(employee);\n        // Logger.log(\u0027%s\u0027, this.save(employee));\n    }\n\n    this.print \u003d function() {\n        for (var i \u003d 0; i \u003c this._data.length; ++i) {\n            var employee \u003d this._data[i];\n            Logger.log(\u0027 - %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s\u0027,\n                employee[ CONST.DST_FULLNAME ],\n                employee[ CONST.DST_M_START ],\n                employee[ CONST.DST_M_END ],\n                employee[ CONST.DST_IS_DIR],\n                employee[ CONST.DST_SCHOOL ],\n                employee[ CONST.DST_H_MORN ],\n                employee[ CONST.DST_H_NOON ],\n                employee[ CONST.DST_H_EVEN ],\n                employee[ CONST.DST_ALSH_P1 ],\n                employee[ CONST.DST_ALSH_P2 ],\n                employee[ CONST.DST_ALSH_P3 ],\n                employee[ CONST.DST_ALSH_TOUS ],\n                employee[ CONST.DST_ALSH_NOEL ],\n                employee[ CONST.DST_ALSH_CARN ],\n                employee[ CONST.DST_ALSH_PAQU ],\n                employee[ CONST.DST_ALSH_JUIL ],\n                employee[ CONST.DST_ALSH_AOUT ]\n            );\n        }\n        // Logger.log(this._data);\n    }\n}\n\n\nfunction main() {\n    // INIT    \n    var src_values \u003d Sheets.Spreadsheets.Values.get(SETTINGS.SRC_ID, SETTINGS.SRC_NAME_RANGE).values;\n    if (!src_values) {\n        Logger.log(\u0027No data found for SRC.\u0027);\n        return;\n    }\n\n\n    // CORE\n    // Data collect from RECAP\n    var employees \u003d new Employees();\n    \n    for (var i \u003d 1; i \u003c src_values.length; ++i) {        \n        employees.update(src_values[i]);\n    }\n    employees.print();\n\n\n    // SAVE\n    // Save data to DST\n    var dst_value_range \u003d Sheets.newValueRange();\n        dst_value_range.values \u003d employees._data;\n\n    var result \u003d Sheets.Spreadsheets.Values.update(dst_value_range, SETTINGS.DST_ID, SETTINGS.DST_NAME_RANGE, {\n        valueInputOption: \u0027USER_ENTERED\u0027\n    });\n}"},{"id":"cd644f69-ae28-4f5f-b34e-883edb0d9265","name":"RECAPS-v1","type":"server_js","source":"/*\tIMPORT DATA\n\t\n\tCOLLECT data from a set of sheets from a given source\n\tAnd ORDER them in a new sheet\n\n\t/!\\ Source can be\n\t\tREPARTITION_PERSONNEL_STJO_SERVICE_ACM_2019-2020\n\t\tOr current file ALSH\u0026PERI-SJO-Personnel\n\n\tEntry points: \n\t\tmain_local\n\t\tmain_extern\n\n\tSource file:\n\t\tREPARTITION_PERSONNEL_STJO_SERVICE_ACM_2019-2020\n\t\thttps://docs.google.com/spreadsheets/d/1-JVQ-3kYWhVkwG5MYjkVGjy0X4qWCk0BfZj5gKAzgwU\n\n\tDestination file:\n\t\tALSH\u0026PERI-SJO-Personnel\n\t\thttps://docs.google.com/spreadsheets/d/17l98l7bTyjtgIBEh1vClaVDaRwcVMXYRmvoyEXcigEI\n*/\n\nvar CONST \u003d {\n\tSRC_NO: 0,\n\n\tSRC_PHONE: 3,\n\tSRC_FULLNAME: 1,\n\n\tSRC_GRADE: 4,\n\tSRC_QUALITY: 5,\n\n\tSRC_OBS: 8,\n\tSRC_AFFECT: 9,\n\n\tSRC_SUM_WEEKLY_PERI: 6,\n\tSRC_SUM_ACM_PERI: 7,\n\n\tSRC_MONDAY_MORN: 10,\n\tSRC_MONDAY_NOON: 11,\n\tSRC_MONDAY_EVEN: 12,\n\n\tSRC_TUESDAY_MORN: 13,\n\tSRC_TUESDAY_NOON: 14,\n\tSRC_TUESDAY_EVEN: 15,\n\n\tSRC_THURSDAY_MORN: 16,\n\tSRC_THURSDAY_NOON: 17,\n\tSRC_THURSDAY_EVEN: 18,\n\n\tSRC_FRIDAY_MORN: 19,\n\tSRC_FRIDAY_NOON: 20,\n\tSRC_FRIDAY_EVEN: 21,\n};\n\n\nvar SETTINGS \u003d {\n\tEXTERN_SRC_ID: \u0027\u0027,\n\n\tDST_ID: \u002717l98l7bTyjtgIBEh1vClaVDaRwcVMXYRmvoyEXcigEI\u0027,\n\tDST_NAME_RANGE: \u0027RECAP\u0027,\n};\n\n\n// Base Employee Class\nvar Employee \u003d function() {\n\t// this.NO \u003d 0; // Not important I guess\n\n\tthis._phone \t\t\t\u003d \u0027\u0027;\n\tthis._fullname \t\t\t\u003d \u0027\u0027;\n\n\tthis._grade \t\t\t\u003d \u0027\u0027;\n\tthis._school\t\t\t\u003d \u0027\u0027;\n\tthis._quality \t\t\t\u003d \u0027\u0027;\n\n\tthis._obs \t\t\t\t\u003d \u0027\u0027;\n\tthis._affect \t\t\t\u003d \u0027\u0027;\n\n\tthis._sum_weekly_peri \t\u003d \u0027\u0027;\n\tthis._sum_acm_peri \t\t\u003d \u0027\u0027;\n\n\tthis._monday_morn \t\t\u003d \u0027\u0027;\n\tthis._monday_noon \t\t\u003d \u0027\u0027;\n\tthis._monday_even \t\t\u003d \u0027\u0027;\n\n\tthis._tuesday_morn \t\t\u003d \u0027\u0027;\n\tthis._tuesday_noon \t\t\u003d \u0027\u0027;\n\tthis._tuesday_even \t\t\u003d \u0027\u0027;\n\n\tthis._thursday_morn \t\u003d \u0027\u0027;\n\tthis._thursday_noon \t\u003d \u0027\u0027;\n\tthis._thursday_even \t\u003d \u0027\u0027;\n\n\tthis._friday_morn \t\t\u003d \u0027\u0027;\n\tthis._friday_noon \t\t\u003d \u0027\u0027;\n\tthis._friday_even \t\t\u003d \u0027\u0027;\n\n\n\t// Outputs\n\tthis.print \u003d function() {\n\t\tLogger.log(\u0027\u0027);\n\t};\n\n\n\tthis.to_array \u003d function() {\n\t\treturn [\n\t\t\tthis._fullname,\n\t\t\tthis._phone,\n\n\t\t\tthis._grade,\n\t\t\tthis._school,\n\t\t\tthis._quality,\n\n\t\t\tthis._obs,\n\t\t\tthis._affect,\n\n\t\t\tthis._sum_weekly_peri,\n\t\t\tthis._sum_acm_peri,\n\n\t\t\tthis._monday_morn,\n\t\t\tthis._monday_noon,\n\t\t\tthis._monday_even,\n\n\t\t\tthis._tuesday_morn,\n\t\t\tthis._tuesday_noon,\n\t\t\tthis._tuesday_even,\n\n\t\t\tthis._thursday_morn,\n\t\t\tthis._thursday_noon,\n\t\t\tthis._thursday_even,\n\n\t\t\tthis._friday_morn,\n\t\t\tthis._friday_noon,\n\t\t\tthis._friday_even,\n\t\t];\n\t};\n\n\n\tthis.to_object \u003d function() {\n\t\treturn {\n\t\t\t\u0027fullname\u0027: \t\tthis._fullname,\n\t\t\t\u0027phone\u0027: \t\t\tthis._phone,\n\n\t\t\t\u0027grade\u0027: \t\t\tthis._grade,\n\t\t\t\u0027school\u0027: \t\t\tthis._school,\n\t\t\t\u0027quality\u0027: \t\t\tthis._quality,\n\n\t\t\t\u0027obs\u0027: \t\t\t\tthis._obs,\n\t\t\t\u0027affect\u0027: \t\t\tthis._affect,\n\n\t\t\t\u0027sum_weekly_peri\u0027: \tthis._sum_weekly_peri,\n\t\t\t\u0027sum_acm_peri\u0027: \tthis._sum_acm_peri,\n\n\t\t\t\u0027monday_morn\u0027: \t\tthis._monday_morn,\n\t\t\t\u0027monday_noon\u0027: \t\tthis._monday_noon,\n\t\t\t\u0027monday_even\u0027: \t\tthis._monday_even,\n\n\t\t\t\u0027tuesday_morn\u0027: \tthis._tuesday_morn,\n\t\t\t\u0027tuesday_noon\u0027: \tthis._tuesday_noon,\n\t\t\t\u0027tuesday_even\u0027: \tthis._tuesday_even,\n\n\t\t\t\u0027thursday_morn\u0027: \tthis._thursday_morn,\n\t\t\t\u0027thursday_noon\u0027: \tthis._thursday_noon,\n\t\t\t\u0027thursday_even\u0027: \tthis._thursday_even,\n\n\t\t\t\u0027friday_morn\u0027: \t\tthis._friday_morn,\n\t\t\t\u0027friday_noon\u0027: \t\tthis._friday_noon,\n\t\t\t\u0027friday_even\u0027: \t\tthis._friday_even,\n\t\t};\n\t};\n\n\n\t// INPUTS\n\n\t// Input from file\n\t// REPARTITION_PERSONNEL_STJO_SERVICE_ACM_2019-2020\n\t// https://docs.google.com/spreadsheets/d/1-JVQ-3kYWhVkwG5MYjkVGjy0X4qWCk0BfZj5gKAzgwU\n\tthis.from_REPARTITION_PERSONNEL_STJO \u003d function(row, name) {\n\t\tthis._phone \t\t\t\t\u003d row[ CONST.SRC_PHONE ];\n\t\tthis._fullname \t\t\t\t\u003d row[ CONST.SRC_FULLNAME ];\n\n\t\tthis._grade \t\t\t\t\u003d row[ CONST.SRC_GRADE ];\n\t\tthis._school \t\t\t\t\u003d name;\n\t\tthis._quality \t\t\t\t\u003d row[ CONST.SRC_QUALITY ];\n\n\t\tthis._obs \t\t\t\t\t\u003d row[ CONST.SRC_OBS ];\n\t\tthis._affect \t\t\t\t\u003d row[ CONST.SRC_AFFECT ];\n\n\t\tthis._sum_weekly_peri \t\t\u003d this.from_REPARTITION_PERSONNEL_STJO__sum( row[ CONST.SRC_SUM_WEEKLY_PERI ] );\n\t\tthis._sum_acm_peri \t\t\t\u003d this.from_REPARTITION_PERSONNEL_STJO__sum( row[ CONST.SRC_SUM_ACM_PERI ] );\n\n\t\tthis._monday_morn \t\t\t\u003d this.from_REPARTITION_PERSONNEL_STJO__hour( row[ CONST.SRC_MONDAY_MORN ] );\n\t\tthis._monday_noon \t\t\t\u003d this.from_REPARTITION_PERSONNEL_STJO__hour( row[ CONST.SRC_MONDAY_NOON ] );\n\t\tthis._monday_even \t\t\t\u003d this.from_REPARTITION_PERSONNEL_STJO__hour( row[ CONST.SRC_MONDAY_EVEN ] );\n\n\t\tthis._tuesday_morn \t\t\t\u003d this.from_REPARTITION_PERSONNEL_STJO__hour( row[ CONST.SRC_TUESDAY_MORN ] );\n\t\tthis._tuesday_noon \t\t\t\u003d this.from_REPARTITION_PERSONNEL_STJO__hour( row[ CONST.SRC_TUESDAY_NOON ] );\n\t\tthis._tuesday_even \t\t\t\u003d this.from_REPARTITION_PERSONNEL_STJO__hour( row[ CONST.SRC_TUESDAY_EVEN ] );\n\n\t\tthis._thursday_morn \t\t\u003d this.from_REPARTITION_PERSONNEL_STJO__hour( row[ CONST.SRC_THURSDAY_MORN ] );\n\t\tthis._thursday_noon \t\t\u003d this.from_REPARTITION_PERSONNEL_STJO__hour( row[ CONST.SRC_THURSDAY_NOON ] );\n\t\tthis._thursday_even \t\t\u003d this.from_REPARTITION_PERSONNEL_STJO__hour( row[ CONST.SRC_THURSDAY_EVEN ] );\n\n\t\tthis._friday_morn \t\t\t\u003d this.from_REPARTITION_PERSONNEL_STJO__hour( row[ CONST.SRC_FRIDAY_MORN ] );\n\t\tthis._friday_noon \t\t\t\u003d this.from_REPARTITION_PERSONNEL_STJO__hour( row[ CONST.SRC_FRIDAY_NOON ] );\n\t\tthis._friday_even \t\t\t\u003d this.from_REPARTITION_PERSONNEL_STJO__hour( row[ CONST.SRC_FRIDAY_EVEN ] );\n\t};\n\n\t\tthis.from_REPARTITION_PERSONNEL_STJO__hour \u003d function(hour_raw) {\n\t\t\tif (hour_raw \u003d\u003d undefined)\n\t\t\t\treturn \u0027\u0027;\n\t\t\treturn hour_raw;\n\t\t}\n\n\t\tthis.from_REPARTITION_PERSONNEL_STJO__sum \u003d function(sum_raw) {\n\t\t\treturn extract_numbers_from_string(sum_raw)\n\t\t}\n};\n\n\nfunction ss_create_sheet(ss, sheet_name) {\n\tvar s \u003d ss.insertSheet(sheet_name);\n \treturn s;\n}\n\n\nfunction ss_delete_sheet(ss, sheet_name) {\n\t// s \u003d ss.getSheetByName(sheet_name);\n\t// ss.deleteSheet(s);\n\tss.removeNamedRange(sheet_name);\n}\n\n\nfunction extract_numbers_from_string(s) {\n\tvar r \u003d \u0027\u0027;\n\tfor (var i \u003d 0; i \u003c s.length; ++i) {\n\t\tconst c \u003d s.charCodeAt(i);\n\t\tif (c \u003e\u003d 49 \u0026\u0026 c \u003c\u003d 57)\n\t\t\tr +\u003d s[i];\n\t}\n\treturn r;\n}\n\n\nfunction main_local() {\n\tvar src_ss \u003d SpreadsheetApp.getActiveSpreadsheet();\n\n\tconst src_sheets_raw \u003d [\n\t\t// SHEET NAME \t\t\tSHEET_RANGE\n\t\t[ \u0027CHAP\u0027, \t\t\t\t\u0027A15:V40\u0027 ],\n\t\t[ \u0027PRES\u0027, \t\t\t\t\u0027A15:V40\u0027 ],\n\t\t[ \u0027JMER\u0027, \t\t\t\t\u0027A15:V40\u0027 ],\n\t\t[ \u0027EM\u0027, \t\t\t\t\u0027A15:V40\u0027 ],\n\t\t[ \u0027DUR\u0027, \t\t\t\t\u0027A15:V40\u0027 ],\n\t\t[ \u0027MDO\u0027, \t\t\t\t\u0027A15:V40\u0027 ],\n\t\t[ \u0027HM\u0027, \t\t\t\t\u0027A15:V40\u0027 ],\n\t\t[ \u0027BDP\u0027, \t\t\t\t\u0027A15:V40\u0027 ],\n\t\t[ \u0027GOND\u0027, \t\t\t\t\u0027A15:V40\u0027 ],\n\t\t[ \u0027MERC_P1_MOINS\u0027, \t\t\u0027A16:M55\u0027 ],\n\t\t[ \u0027MERC_P1_PLUS\u0027, \t\t\u0027A16:M55\u0027 ],\n\t\t[ \u0027NOEL_MOINS\u0027, \t\t\u0027A16:M55\u0027 ],\n\t\t[ \u0027NOEL_PLUS\u0027, \t\t\t\u0027A16:M55\u0027 ],\n\t\t[ \u0027CARNAVAL_MOINS\u0027, \t\u0027A16:M55\u0027 ],\n\t\t[ \u0027CARNAVAL_PLUS\u0027, \t\t\u0027A16:M55\u0027 ],\n\t\t[ \u0027PAQUES_MOINS\u0027, \t\t\u0027A16:M55\u0027 ],\n\t\t[ \u0027PAQUES_PLUS\u0027, \t\t\u0027A16:M55\u0027 ],\n\t];\n\n\tmain(src_ss, src_sheets_raw);\n}\n\n\nfunction main(src_ss, src_sheets_raw) {\n\n\t// Loop throught SRC sheets\n\tvar employee \u003d new Employee().to_array();\n\tvar employees \u003d [];\n\n\tfor (var i \u003d 0; i \u003c src_sheets_raw.length; ++i) {\n\t\temployees \u003d employees.concat( \n\t\t\tparse_sheet(src_ss, src_sheets_raw[i][0], src_sheets_raw[i][1])\n\t\t);\n\t}\n\n\n\t// for (var i \u003d 0 ; i \u003c employees.length; ++i) {\n\t\t// Logger.log(employees[i]);\n\t// }\n\n\n\tvar dst_sheet \u003d SpreadsheetApp\n\t\t\t\t\t.getActiveSpreadsheet()\n\t\t\t\t\t.getSheetByName(\u0027RECAP\u0027);\n\n\n\tvar dst_range \u003d dst_sheet.getRange(1, 1, 1, employee.length);\n\n\tvar headers \u003d  [[\n\t\t\u0027fullname\u0027,\n\t\t\u0027phone\u0027,\n\n\t\t\u0027grade\u0027,\n\t\t\u0027school\u0027,\n\t\t\u0027quality\u0027,\n\n\t\t\u0027obs\u0027,\n\t\t\u0027affect\u0027,\n\n\t\t\u0027sum_weekly_peri\u0027,\n\t\t\u0027sum_acm_peri\u0027,\n\n\t\t\u0027monday_morn\u0027,\n\t\t\u0027monday_noon\u0027,\n\t\t\u0027monday_even\u0027,\n\n\t\t\u0027tuesday_morn\u0027,\n\t\t\u0027tuesday_noon\u0027,\n\t\t\u0027tuesday_even\u0027,\n\n\t\t\u0027thursday_morn\u0027,\n\t\t\u0027thursday_noon\u0027,\n\t\t\u0027thursday_even\u0027,\n\n\t\t\u0027friday_morn\u0027,\n\t\t\u0027friday_noon\u0027,\n\t\t\u0027friday_even\u0027,\n\t]];\n\tdst_range.setValues(headers);\n\n\n\tdst_range \u003d dst_sheet.getRange(2, 1, employees.length, employee.length);\n\tdst_range.setValues(employees);\n}\n\n\nfunction parse_sheet(src_ss, src_sheet_name, src_sheet_range) {\n\n\tLogger.log(\u0027Current Sheet Name: %s\u0027, src_sheet_name);\n\n\t// Get Sheet by name\n\tvar src_sheet \u003d src_ss.getSheetByName(src_sheet_name);\n\n\tif (src_sheet \u003d\u003d null) {\n\t\tLogger.log(\u0027%s - Failled to get src sheet. Abort\u0027, src_sheet_name);\n\t\t\n\t\treturn [];\n\t}\n\n\n\t// Collect its data\n\tLogger.log(\u0027%s - Collecting data...\u0027, src_sheet_name);\n\n\tvar src_range \u003d src_sheet.getRange(src_sheet_range);\n\tvar src_values \u003d src_range.getValues();\n\n\n\n\t// Parse them\n\t// Store them\n\tLogger.log(\u0027%s - Parsing data...\u0027, src_sheet_name);\n\n\tvar employees \u003d [];\n\n\tfor (var i \u003d 0; i \u003c src_values.length; ++i) {\n\t\tvar value \u003d src_values[i];\n\n\t\tif (value[ CONST.SRC_FULLNAME ] \u003d\u003d \u0027\u0027)\n\t\t\tcontinue;\n\n\t\tvar employee \u003d new Employee();\n\t\t\temployee.from_REPARTITION_PERSONNEL_STJO(value, src_sheet_name);\n\n\t\temployees.push(employee.to_array());\n\n\t\tLogger.log(value);\n\t\tLogger.log(employee.to_array());\n\t\t// Logger.log(\u0027value: %s\u0027, src_values[i]);\n\t}\n\n\n\t// Return them\n\treturn employees;\n}"},{"id":"0d6106ed-dfc4-43c7-bda6-426de11b4f17","name":"Hours-Count-v3","type":"server_js","source":"/*\n    HOURS COUNT v3\n\n    The purpose of this 3rd version is the same as v2\n    However it has to be flexible enough to carry two source files\n    We will provide two entry points: one for \u0027FdF\u0027 and one for \u0027STJO\u0027\n\n    Data are extracted from \n        (REPARTITION_PERSONNEL_STJO_SERVICE_ACM_2019-2020) or\n        (Repartition_Personnel_ACM_2019-2020) \n        in their RECAP tab\n    Then we organize them with Employee class\n    And we save it in file (Suivi Compte D\u0027heures 2019-2020)\n\n    Entry points:\n        main_FdF\n        main_STJO\n\n    Source files:\n        REPARTITION_PERSONNEL_STJO_SERVICE_ACM_2019-2020\n        https://docs.google.com/spreadsheets/d/1-JVQ-3kYWhVkwG5MYjkVGjy0X4qWCk0BfZj5gKAzgwU\n\n        Repartition_Personnel_ACM_2019-2020\n        https://docs.google.com/spreadsheets/d/1XsVb3m4ntFICipgvXO5Jsdu54JAKf5BJpvlDtFCZeHw\n        https://docs.google.com/spreadsheets/d/1mzLCS6LQ9cn2720rabICK-VCl0EvU04pU0EdgwHSHIU (Copie)\n\n    Destination file:\n        Suivi Compte D\u0027heures 2019-2020\n        https://docs.google.com/spreadsheets/d/1hOc7GccePGflrWUQBTZlYz2ATbHhGz7TzSzKvtShIAk\n*/\n\nvar CONST \u003d {\n\n    // CONST.ID \u003d 9;\n    SRC_TYPE:       2,\n    SRC_MORN:       4,\n    SRC_NOON:       5,\n    SRC_EVEN:       6,\n    SRC_AFFECT_1:   3, // PERI 1 / ALSH_MERC / NOEL / CARN ...\n    SRC_AFFECT_2:   7, // PERI / ALSH PTE VAC / ALSH GDE VAC\n    SRC_AFFECT_3:   1, // School / ALSH_MOINS / ALSH_PLUS\n    SRC_FULLNAME:   0,\n\n\n    // DST REFERENCES\n    DST_FULLNAME:   0,\n    DST_IS_DIR:     5,\n    DST_SCHOOL:     6,\n\n    DST_VOID_1:     1,\n    DST_VOID_2:     2,\n\n    DST_M_START:    3,\n    DST_M_END:      4,\n\n    DST_H_MORN:     7,\n    DST_H_NOON:     8,\n    DST_H_EVEN:     9,\n\n    DST_ALSH_P1:    10,\n    DST_ALSH_P2:    11,\n    DST_ALSH_P3:    12,\n\n    DST_ALSH_TOUS:  13,\n    DST_ALSH_NOEL:  14,\n    DST_ALSH_CARN:  15,\n    DST_ALSH_PAQU:  16,\n    DST_ALSH_JUIL:  17,\n    DST_ALSH_AOUT:  18,\n};\n\n\nvar SETTINGS \u003d {\n    // FDF_ID: \u00271mzLCS6LQ9cn2720rabICK-VCl0EvU04pU0EdgwHSHIU\u0027,\n    FDF_ID: \u00271XsVb3m4ntFICipgvXO5Jsdu54JAKf5BJpvlDtFCZeHw\u0027,\n    \n    FDF_NAME_RANGE: \u0027RECAP!A2:H\u0027,\n    FDF_HAS_HEADER: true,\n\n\n    STJO_ID: \u00271-JVQ-3kYWhVkwG5MYjkVGjy0X4qWCk0BfZj5gKAzgwU\u0027,\n    STJO_NAME_RANGE: \u0027RECAP!A2:H\u0027,\n    STJO_HAS_HEADER: true,\n\n    //  DST_ID: \u00271jWrIa-tgpItt-px2E2M7qnDs0DDYDJXeD_wPePAHB-Q\u0027,\n    // DST_NAME_RANGE: \u0027Copie de AFFECTION_SJO!A18:S\u0027,\n    DST_ID: \u00271hOc7GccePGflrWUQBTZlYz2ATbHhGz7TzSzKvtShIAk\u0027,\n\n    DST_FDF_NAME_RANGE: \u0027AFFECTION_FDF!A18:S\u0027,\n    DST_STJO_NAME_RANGE: \u0027AFFECTION_SJO!A18:S\u0027,    \n};\n\n\nvar Employees \u003d function() {\n    this._data \u003d [];\n\n    this.exist \u003d function(fullname) {\n        for (var i \u003d 0; i \u003c this._data.length; ++i) {\n            if (this._data[i][CONST.DST_FULLNAME] \u003d\u003d fullname)\n                return i;\n        }\n        return -1;\n    }\n\n    this.add \u003d function(fullname) {\n        var employee \u003d [\n            /* fullname     */     fullname,\n            /* blank_1      */      \u0027\u0027,             // \u0027\u003dARRAYFORMULA(SI($A17:$A\u003d\"\";;AN17:AN/$Y17:$Y))\u0027,\n            /* blank_2      */      \u0027\u0027,             // \u0027\u003dARRAYFORMULA(SI($A17:$A\u003d\"\";;AO17:AO/$Y17:$Y))\u0027,\n            /* month_start  */      \u0027SEPT. 2019\u0027,\n            /* month_end    */      \u0027JUIN 2020\u0027,\n            /* is_dir       */      false,\n            /* school       */      \u0027\u0027,\n            /* h_morn       */      \u0027\u0027,\n            /* h_noon       */      \u0027\u0027,\n            /* h_even       */      \u0027\u0027,\n            /* alsh_p1      */      \u0027\u0027,\n            /* alsh_p2      */      \u0027\u0027,\n            /* alsh_p3      */      \u0027\u0027,\n            /* alsh_tous    */      \u0027\u0027,\n            /* alsh_noel    */      \u0027\u0027,\n            /* alsh_carn    */      \u0027\u0027,\n            /* alsh_paqu    */      \u0027\u0027,\n            /* alsh_juil    */      \u0027\u0027,\n            /* alsh_aout    */      \u0027\u0027,   \n        ];\n        this._data.push(employee);\n        return employee;\n    }\n\n    this.save \u003d function(employee) {\n        for (var i \u003d 0; i \u003c this._data.length; ++i) {\n            if (this._data[i][ CONST.DST_FULLNAME ] \u003d\u003d employee[ CONST.DST_FULLNAME ]) {\n                this._data[i] \u003d employee;\n                return true;\n            }\n        }\n        return false;\n    }\n\n    this.update \u003d function(row) {\n        var employee \u003d undefined;\n        var iemployee \u003d undefined;\n\n        // Find employee\n            // If not find \n            // Create a new one\n        if ((iemployee \u003d this.exist(row[ CONST.SRC_FULLNAME ])) \u003d\u003d -1)  {\n            employee \u003d this.add(row[ CONST.SRC_FULLNAME ]);\n        }\n        else {\n            employee \u003d this._data[iemployee];\n        }\n        // Logger.log(\u0027iemployee: %s\u0027, iemployee);\n\n\n        // Check if no errors\n        if (employee \u003d\u003d undefined) {\n            Logger.log(\u0027Failed to add/get employee with fullname: %s\u0027, row[ CONST.SRC_FULLNAME ]);\n        }\n\n\n        // Organise data according to DST format\n\n        // DIR\n        if (row[ CONST.SRC_TYPE ] \u003d\u003d \u0027DAP\u0027)\n            employee[ CONST.DST_IS_DIR] \u003d true;\n\n\n        // SCHOOL\n        const schools \u003d {\n            \u0027BDP\u0027   : \u0027BOIS DU PARC\u0027,\n            \u0027JMER\u0027  : \u0027Jeanne MERTON\u0027,\n            \u0027EM\u0027    : \u0027EDOUARD MARCEAU\u0027,\n            \u0027HM\u0027    : \u0027HENRI MAURICE\u0027,\n            \u0027PRES\u0027  : \u0027PRESQU\\\u0027ÃŽLE\u0027,\n            \u0027MDO\u0027   : \u0027MORNE DES OLIVES\u0027,\n            \u0027GOND\u0027  : \u0027Ambroise PALIX - GONDEAU\u0027,\n            \u0027DUR\u0027   : \u0027Luc CAYOL - DURAND\u0027,\n            \u0027CHAP\u0027  : \u0027Lise DESIR CARTESSE - CHAPELLE\u0027,\n\n            \u0027ALSH_MOINS\u0027:   \u0027ALSH_MOINS\u0027,\n            \u0027ALSH_PLUS\u0027:    \u0027ALSH_PLUS\u0027,\n        }\n        // employee[ CONST.DST_SCHOOL ] \u003d schools[row[ CONST.SRC_AFFECT_3]]; // AFFECT_3 \u003d SCHOOL\n\n\n        // AFFECTATION DECISIONS\n        // PERI\n        // \n        if (row[ CONST.SRC_AFFECT_1] \u003d\u003d \u0027PERI 1\u0027) {\n\n            // SCHOOL\n            employee[ CONST.DST_SCHOOL ] \u003d row[ CONST.SRC_AFFECT_3]; // AFFECT_3 \u003d SCHOOL\n            // employee[ CONST.DST_SCHOOL ] \u003d schools[row[ CONST.SRC_AFFECT_3]]; // AFFECT_3 \u003d SCHOOL\n\n            // HOURS MORN/NOON/EVEN\n            employee[ CONST.DST_H_MORN ] \u003d this.update_hours( row[ CONST.SRC_MORN ] );\n            employee[ CONST.DST_H_NOON ] \u003d this.update_hours( row[ CONST.SRC_NOON ] );\n            employee[ CONST.DST_H_EVEN ] \u003d this.update_hours( row[ CONST.SRC_EVEN ] );\n        }\n\n        else if (row[ CONST.SRC_AFFECT_1] \u003d\u003d \u0027PERI 2\u0027) {\n\n            // PERI 1 has priority\n            if (employee[ CONST.DST_SCHOOL ] \u003d\u003d \u0027\u0027) {\n                employee[ CONST.DST_SCHOOL ] \u003d row[ CONST.SRC_AFFECT_3]; // AFFECT_3 \u003d SCHOOL\n                // employee[ CONST.DST_SCHOOL ] \u003d schools[row[ CONST.SRC_AFFECT_3]]; // AFFECT_3 \u003d SCHOOL\n            }\n\n            // HOURS MORN/NOON/EVEN\n            employee[ CONST.DST_H_MORN ] \u003d this.update_hours( row[ CONST.SRC_MORN ] );\n            employee[ CONST.DST_H_NOON ] \u003d this.update_hours( row[ CONST.SRC_NOON ] );\n            employee[ CONST.DST_H_EVEN ] \u003d this.update_hours( row[ CONST.SRC_EVEN ] );\n        }\n\n        // ALSH\n        else {\n            // ALSH_MOINS/ALSH_PLUS\n            if (employee[ CONST.DST_SCHOOL ] \u003d\u003d \u0027\u0027) {\n                employee[ CONST.DST_SCHOOL ] \u003d row[ CONST.SRC_AFFECT_3]; // AFFECT_3 \u003d SCHOOL\n                // employee[ CONST.DST_SCHOOL ] \u003d schools[row[ CONST.SRC_AFFECT_3]]; // AFFECT_3 \u003d SCHOOL\n            }\n\n\n            // LAST TIME CONDITION\n            // VACATIONS ARE NOT READY YET\n            // ONLY FILTER ALSH MERC\n            if (row[ CONST.SRC_AFFECT_1] \u003d\u003d \u0027MERC P1\u0027) {\n\n                const WHERE \u003d {\n                    \u0027MERC P1\u0027:      CONST.DST_ALSH_P1,\n                    \u0027NOEL\u0027:         CONST.DST_ALSH_NOEL,\n                    \u0027CARN\u0027:         CONST.DST_ALSH_CARN,\n                    \u0027PAQUES\u0027:       CONST.DST_ALSH_PAQU,\n                    \u0027JUILLET\u0027:      CONST.DST_ALSH_JUIL,\n                    \u0027AOUT\u0027:         CONST.DST_ALSH_AOUT, \n                }\n\n                const AFFECT \u003d {\n                    \u0027ALSH_MOINS\u0027: \u0027MAT\u0027,\n                    \u0027ALSH_PLUS\u0027: \u0027ELE\u0027,\n                }\n\n                const AFFECT_DIR \u003d {\n                    \u0027ALSH_MOINS\u0027: \u0027MAT_DIR\u0027,\n                    \u0027ALSH_PLUS\u0027: \u0027ELE_DIR\u0027,\n                }\n\n                const where \u003d WHERE[row[ CONST.SRC_AFFECT_1]];\n\n                // Hours for ALSH\n                var value \u003d \u0027\u0027;\n                if (row[ CONST.SRC_NOON ] \u003d\u003d \u00278\u0027) {\n                    value \u003d \u0027C_\u0027;\n                }\n                else {\n                    value \u003d \u0027G_\u0027;\n                }\n\n                value +\u003d (employee[ CONST.DST_IS_DIR]) ? AFFECT_DIR[row[ CONST.SRC_AFFECT_3]] : AFFECT[row[ CONST.SRC_AFFECT_3]];\n\n                employee[where] \u003d value;\n\n                // if (where \u003d\u003d \u0027alsh_p1\u0027) {\n                //     // Logger.log(\u0027fname: %s with where \u003d\u003d %s \u0026\u0026 value \u003d\u003d %s\u0027, employee[\u0027fullname\u0027], where, value);\n                //     Logger.log(\u0027employee[%s] \u003d %s\u0027, where, value);\n                // }\n            }\n        }\n\n        // Save employee when we are done\n        this.save(employee);\n        // Logger.log(\u0027%s\u0027, this.save(employee));\n    };\n\n\n        this.update_hours \u003d function(hour) {\n            if (hour \u003d\u003d \u0027\u0027)\n                return \u00270\u0027;\n            return hour;\n        };\n\n\n    this.print \u003d function() {\n        for (var i \u003d 0; i \u003c this._data.length; ++i) {\n            var employee \u003d this._data[i];\n            \n            Logger.log(\u0027%s\u0027, employee);\n            /*\n            Logger.log(\u0027 - %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s\u0027,\n                employee[ CONST.DST_FULLNAME ],\n                employee[ CONST.DST_M_START ],\n                employee[ CONST.DST_M_END ],\n                employee[ CONST.DST_IS_DIR],\n                employee[ CONST.DST_SCHOOL ],\n                employee[ CONST.DST_H_MORN ],\n                employee[ CONST.DST_H_NOON ],\n                employee[ CONST.DST_H_EVEN ],\n                employee[ CONST.DST_ALSH_P1 ],\n                employee[ CONST.DST_ALSH_P2 ],\n                employee[ CONST.DST_ALSH_P3 ],\n                employee[ CONST.DST_ALSH_TOUS ],\n                employee[ CONST.DST_ALSH_NOEL ],\n                employee[ CONST.DST_ALSH_CARN ],\n                employee[ CONST.DST_ALSH_PAQU ],\n                employee[ CONST.DST_ALSH_JUIL ],\n                employee[ CONST.DST_ALSH_AOUT ]\n            );\n            */\n        }\n        // Logger.log(this._data);\n    };\n}\n\n\nfunction main_FdF() {\n    Logger.log(\u0027Fort-de-France\u0027);\n\n    // INIT    \n    var src_values \u003d Sheets.Spreadsheets.Values.get(\u00271XsVb3m4ntFICipgvXO5Jsdu54JAKf5BJpvlDtFCZeHw\u0027, \u0027RECAP!A2:H\u0027).values;\n    if (!src_values) {\n        Logger.log(\u0027No data found for SRC.\u0027);\n        return;\n    }\n\n    main(src_values, SETTINGS.DST_FDF_NAME_RANGE);\n}\n\n\nfunction main_STJO() {\n    Logger.log(\u0027Saint-Joseph\u0027);\n\n    // INIT    \n    var src_values \u003d Sheets.Spreadsheets.Values.get(SETTINGS.STJO_ID, SETTINGS.STJO_NAME_RANGE).values;\n    if (!src_values) {\n        Logger.log(\u0027No data found for SRC.\u0027);\n        return;\n    }\n\n    // main(src_values, SETTINGS.DST_STJO_NAME_RANGE);\n}\n\n\nfunction main(src_values, dst_name_range) {\n    // CORE\n    // Data collect from RECAP\n    var employees \u003d new Employees();\n    \n    for (var i \u003d 1; i \u003c src_values.length; ++i) {  \n        // Logger.log(src_values[i]);      \n        employees.update(src_values[i]);\n    }\n    employees.print();\n    return;\n\n\n    // SAVE\n    // Save data to DST\n    var dst_value_range \u003d Sheets.newValueRange();\n        dst_value_range.values \u003d employees._data;\n\n    var result \u003d Sheets.Spreadsheets.Values.update(dst_value_range, \u00271hOc7GccePGflrWUQBTZlYz2ATbHhGz7TzSzKvtShIAk\u0027, \u0027Copie de AFFECTION_FDF 2!A18:S\u0027, {\n        valueInputOption: \u0027USER_ENTERED\u0027\n    });\n}"},{"id":"3798ae18-8748-43de-a340-e677d6e303e0","name":"LISEZ-MOI","type":"server_js","source":"/*\n\n*/"}]}